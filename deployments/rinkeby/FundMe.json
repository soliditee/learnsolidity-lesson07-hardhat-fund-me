{
  "address": "0x146D7B44874110210B792877e760ac927d0084c0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x88d97a61f34b3ad4323c659f094664b1bc44e7aa49cd7b5e32419a14b4c33217",
  "receipt": {
    "to": null,
    "from": "0x5341A9279747B33595e6588B7326c9e0fbF710Eb",
    "contractAddress": "0x146D7B44874110210B792877e760ac927d0084c0",
    "transactionIndex": 13,
    "gasUsed": "905287",
    "logsBloom": "0x
    "blockHash": "0x33e8fcd8f8f2968321d697caa7e2e31fee6de78befc7951aee58ea84b9bb9fa8",
    "transactionHash": "0x88d97a61f34b3ad4323c659f094664b1bc44e7aa49cd7b5e32419a14b4c33217",
    "logs": [],
    "blockNumber": 11036361,
    "cumulativeGasUsed": "2388535",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "3915e22ed745b13299acff30ade77ca7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Receive funds from any user\\r\\n// Withdraw funds (contract owner only)\\r\\n// Set a minimum funding value\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    // immutable = variable can only be assigned during construction time,\\r\\n    //   and only assigned once even during construction\\r\\n    //   the contract creation code generated by the compiler will modify\\r\\n    //   the contract's runtime code before it is returned\\r\\n    //   by replacing all references to immutables by the values assigned to the them.\\r\\n    // Reference: https://ethereum.stackexchange.com/questions/82240/what-is-the-immutable-keyword-in-solidity\\r\\n    address public immutable i_owner;\\r\\n    // 23619 gas - non-immutable\\r\\n    // 21508 gas - immutable\\r\\n\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // 21415 gas - constant\\r\\n    // 23515 gas - non-constant\\r\\n    uint256 public MINIMUM_USD = 10 * 1e18;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    // payable = this function can send and receive funds\\r\\n    function fund() public payable {\\r\\n        // If this \\\"require\\\" condition is not satisfied, the transaction is reverted\\r\\n        // \\\"Revert\\\" means to undo any action before and send the remaining gas back\\r\\n        // 1e18 = 1 * 10^18 Wei = 1 Ether\\r\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Not enough Ether\\\");\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) > MINIMUM_USD,\\r\\n            \\\"Please send more than 50 USD worth of Ether\\\"\\r\\n        );\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        // Reset the mapping that tracks funders and their amount\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funderAddress = funders[funderIndex];\\r\\n            addressToAmountFunded[funderAddress] = 0;\\r\\n        }\\r\\n\\r\\n        // Reset an array\\r\\n        // (0) means the new array will have 0 elements to begin with\\r\\n        funders = new address[](0);\\r\\n\\r\\n        // 3 ways to withdraw the fund:\\r\\n        // 1) Transfer\\r\\n        // Ether can only be sent to payable addresses\\r\\n        // Transfer will return error and auto-revert if fail\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        // 2) Send\\r\\n        // Send will return bool and will not auto-revert\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n\\r\\n        // 3) Call\\r\\n        // This is the most powerful, we can call any function without knowing the ABI.\\r\\n        // We use \\\"call\\\" to create a new transaction to the sender's address and send the \\\"value\\\"\\r\\n        // instead of making an actual function call\\r\\n        // (bool callSuccess, bytes memory dataReturned)\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // 21509 gas - require\\r\\n        // 21255 gas - if + revert error\\r\\n        // require(msg.sender == i_owner, \\\"You are not the owner.\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        // This means execute the rest of the code\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Fallback to receive() when msg.data is empty in a transaction\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    // Fallback to fallback() when msg.data is not empty but cannot be mapped to an actual function\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6667265c7f42fa9bd28c97f707f032d33bcde4e6a3159dca16ef6d832a6a9c71\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\n// @chainlink/contracts is an npm package\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Reference: https://docs.chain.link/docs/ethereum-addresses/\\r\\n// Kovan Data Feed ETA - USD Address: 0x9326BFA02ADD2366b30bacB125260Af641031331\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    // Return the USD price of one ETH, in the same number of decimals as msg.value (decimals = 18)\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // price decimals = 8\\r\\n        // Reference: https://etherscan.io/address/0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419#readContract\\r\\n        // we need to add 10 more decimals here\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethAmount * ethPrice) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6972961f3e5862d411edfff1918c70ab90d862527f156de91f8aeb6803ee6254\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052678ac7230489e8000060005534801561001c57600080fd5b506040516200100c3803806200100c83398181016040528101906100409190610121565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ee826100c3565b9050919050565b6100fe816100e3565b811461010957600080fd5b50565b60008151905061011b816100f5565b92915050565b600060208284031215610137576101366100be565b5b60006101458482850161010c565b91505092915050565b60805160601c610e9862000174600039600081816102de01526105630152610e986000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b61051d565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107f0565b60405180910390f35b34801561011857600080fd5b5061012161053b565b60405161012e919061086a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610561565b6040516101639190610894565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108db565b610585565b6040516101a09190610894565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b11610221576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102189061098b565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906109da565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610361576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040d5760006001828154811061038757610386610a30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040590610a5f565b915050610364565b50600067ffffffffffffffff81111561042957610428610aa8565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506001908051906020019061046d9291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610b08565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610b69565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d083610600565b90506000670de0b6b3a764000082866105e99190610b89565b6105f39190610c12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610cd0565b5050509150506402540be400816106989190610d4b565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265207468616e2035302055534420776f7260008201527f7468206f66204574686572000000000000000000000000000000000000000000602082015250565b6000610975602b83610908565b915061098082610919565b604082019050919050565b600060208201905081810360008301526109a481610968565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e5826107d7565b91506109f0836107d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a2557610a246109ab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6a826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9d57610a9c6109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af2600083610ad7565b9150610afd82610ae2565b600082019050919050565b6000610b1382610ae5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b53600b83610908565b9150610b5e82610b1d565b602082019050919050565b60006020820190508181036000830152610b8281610b46565b9050919050565b6000610b94826107d7565b9150610b9f836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd76109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1d826107d7565b9150610c28836107d7565b925082610c3857610c37610be3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6281610c43565b8114610c6d57600080fd5b50565b600081519050610c7f81610c59565b92915050565b6000819050919050565b610c9881610c85565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b600081519050610cca816108af565b92915050565b600080600080600060a08688031215610cec57610ceb610747565b5b6000610cfa88828901610c70565b9550506020610d0b88828901610ca6565b9450506040610d1c88828901610cbb565b9350506060610d2d88828901610cbb565b9250506080610d3e88828901610c70565b9150509295509295909350565b6000610d5682610c85565b9150610d6183610c85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610da057610d9f6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ddd57610ddc6109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1a57610e196109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5757610e566109ab565b5b82820290509291505056fea2646970667358221220d828db5ef0343ab0420ea33f881612864aa22ff76d16a2a16b9b209c9f47622864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b61051d565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f6610535565b60405161010391906107f0565b60405180910390f35b34801561011857600080fd5b5061012161053b565b60405161012e919061086a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610561565b6040516101639190610894565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108db565b610585565b6040516101a09190610894565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c490919063ffffffff16565b11610221576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102189061098b565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d391906109da565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610361576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040d5760006001828154811061038757610386610a30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040590610a5f565b915050610364565b50600067ffffffffffffffff81111561042957610428610aa8565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506001908051906020019061046d9291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610b08565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610b69565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d083610600565b90506000670de0b6b3a764000082866105e99190610b89565b6105f39190610c12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610cd0565b5050509150506402540be400816106989190610d4b565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265207468616e2035302055534420776f7260008201527f7468206f66204574686572000000000000000000000000000000000000000000602082015250565b6000610975602b83610908565b915061098082610919565b604082019050919050565b600060208201905081810360008301526109a481610968565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e5826107d7565b91506109f0836107d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a2557610a246109ab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6a826107d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9d57610a9c6109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af2600083610ad7565b9150610afd82610ae2565b600082019050919050565b6000610b1382610ae5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b53600b83610908565b9150610b5e82610b1d565b602082019050919050565b60006020820190508181036000830152610b8281610b46565b9050919050565b6000610b94826107d7565b9150610b9f836107d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd76109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1d826107d7565b9150610c28836107d7565b925082610c3857610c37610be3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6281610c43565b8114610c6d57600080fd5b50565b600081519050610c7f81610c59565b92915050565b6000819050919050565b610c9881610c85565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b600081519050610cca816108af565b92915050565b600080600080600060a08688031215610cec57610ceb610747565b5b6000610cfa88828901610c70565b9550506020610d0b88828901610ca6565b9450506040610d1c88828901610cbb565b9350506060610d2d88828901610cbb565b9250506080610d3e88828901610c70565b9150509295509295909350565b6000610d5682610c85565b9150610d6183610c85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610da057610d9f6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ddd57610ddc6109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1a57610e196109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5757610e566109ab565b5b82820290509291505056fea2646970667358221220d828db5ef0343ab0420ea33f881612864aa22ff76d16a2a16b9b209c9f47622864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}