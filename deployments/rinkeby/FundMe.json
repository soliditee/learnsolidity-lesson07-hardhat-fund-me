{
  "address": "0x3474f368381d757Fd624d7E2F1Dd64f83F9e9a25",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3cb603f690c8ed52da4bd9e4b76255b0e8295d8dfe5e0923d01075623496f0ab",
  "receipt": {
    "to": null,
    "from": "0x5341A9279747B33595e6588B7326c9e0fbF710Eb",
    "contractAddress": "0x3474f368381d757Fd624d7E2F1Dd64f83F9e9a25",
    "transactionIndex": 17,
    "gasUsed": "1078754",
    "logsBloom": "0x
    "blockHash": "0x62c0eade81886f9f94b5e6099ddf6a8d0354157b5c75717509cce211ddb45f84",
    "transactionHash": "0x3cb603f690c8ed52da4bd9e4b76255b0e8295d8dfe5e0923d01075623496f0ab",
    "logs": [],
    "blockNumber": 11043704,
    "cumulativeGasUsed": "3580944",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "8e121429e55328773a56894f28135684",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"soliditee\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/** @title A contract for crowd funding\\r\\n *  @author soliditee\\r\\n */\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // immutable = variable can only be assigned during construction time,\\r\\n    //   and only assigned once even during construction\\r\\n    //   the contract creation code generated by the compiler will modify\\r\\n    //   the contract's runtime code before it is returned\\r\\n    //   by replacing all references to immutables by the values assigned to the them.\\r\\n    // Reference: https://ethereum.stackexchange.com/questions/82240/what-is-the-immutable-keyword-in-solidity\\r\\n    address private immutable i_owner;\\r\\n    // 23619 gas - non-immutable\\r\\n    // 21508 gas - immutable\\r\\n\\r\\n    // 21415 gas - constant\\r\\n    // 23515 gas - non-constant\\r\\n    uint256 public MINIMUM_USD = 10 * 1e18;\\r\\n\\r\\n    address[] private s_funders;\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // 21509 gas - require\\r\\n        // 21255 gas - if + revert error\\r\\n        // require(msg.sender == i_owner, \\\"You are not the owner.\\\");\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert FundMe__NotOwner();\\r\\n        }\\r\\n        // This means execute the rest of the code\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Functions Order:\\r\\n    //// constructor\\r\\n    //// receive\\r\\n    //// fallback\\r\\n    //// external\\r\\n    //// public\\r\\n    //// internal\\r\\n    //// private\\r\\n    //// view / pure\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    // Fallback to receive() when msg.data is empty in a transaction\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    // Fallback to fallback() when msg.data is not empty but cannot be mapped to an actual function\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    // payable = this function can receive funds\\r\\n    /** */\\r\\n    function fund() public payable {\\r\\n        // If this \\\"require\\\" condition is not satisfied, the transaction is reverted\\r\\n        // \\\"Revert\\\" means to undo any action before and send the remaining gas back\\r\\n        // 1e18 = 1 * 10^18 Wei = 1 Ether\\r\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Not enough Ether\\\");\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\r\\n            \\\"Please send more than 10 USD worth of Ether\\\"\\r\\n        );\\r\\n        s_funders.push(msg.sender);\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        // Reset the mapping that tracks funders and their amount\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funderAddress = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funderAddress] = 0;\\r\\n        }\\r\\n\\r\\n        // Reset an array\\r\\n        // (0) means the new array will have 0 elements to begin with\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        // 3 ways to withdraw the fund:\\r\\n        // 1) Transfer\\r\\n        // Ether can only be sent to payable addresses\\r\\n        // Transfer will return error and auto-revert if fail\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n\\r\\n        // 2) Send\\r\\n        // Send will return bool and will not auto-revert\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n\\r\\n        // 3) Call\\r\\n        // This is the most powerful, we can call any function without knowing the ABI.\\r\\n        // We use \\\"call\\\" to create a new transaction to the sender's address and send the \\\"value\\\"\\r\\n        // instead of making an actual function call\\r\\n        // (bool callSuccess, bytes memory dataReturned)\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public onlyOwner {\\r\\n        (bool callSuccess, ) = payable(i_owner).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n\\r\\n        address[] memory funders = s_funders;\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funderAddress = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funderAddress] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address funderAddress)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_addressToAmountFunded[funderAddress];\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x92f1a807b97ee0ef2326a9f21d7e1b05bb7ae7ace74abeefc023003b89114708\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\n// @chainlink/contracts is an npm package\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Reference: https://docs.chain.link/docs/ethereum-addresses/\\r\\n// Kovan Data Feed ETA - USD Address: 0x9326BFA02ADD2366b30bacB125260Af641031331\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    // Return the USD price of one ETH, in the same number of decimals as msg.value (decimals = 18)\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // price decimals = 8\\r\\n        // Reference: https://etherscan.io/address/0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419#readContract\\r\\n        // we need to add 10 more decimals here\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethAmount * ethPrice) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6972961f3e5862d411edfff1918c70ab90d862527f156de91f8aeb6803ee6254\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052678ac7230489e800006000553480156200001d57600080fd5b50604051620013533803806200135383398181016040528101906200004391906200012c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f482620000c7565b9050919050565b6200010681620000e7565b81146200011257600080fd5b50565b6000815190506200012681620000fb565b92915050565b600060208284031215620001455762000144620000c2565b5b6000620001558482850162000115565b91505092915050565b60805160601c6111c1620001926000396000818161034901528181610592015281816105e2015261066901526111c16000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad3565b6102fe565b6040516100cc9190610b19565b60405180910390f35b3480156100e157600080fd5b506100ea610347565b005b3480156100f857600080fd5b50610101610588565b60405161010e9190610b19565b60405180910390f35b34801561012357600080fd5b5061012c61058e565b6040516101399190610b43565b60405180910390f35b34801561014e57600080fd5b506101576105b6565b6040516101649190610bbd565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105e0565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610c04565b6108a5565b6040516101c29190610b43565b60405180910390f35b600054610203600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ed90919063ffffffff16565b11610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023a90610cb4565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f59190610d03565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610478576000600182815481106103f2576103f1610d59565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047090610d88565b9150506103cf565b50600067ffffffffffffffff81111561049457610493610dd1565b5b6040519080825280602002602001820160405280156104c25781602001602082028036833780820191505090505b50600190805190602001906104d89291906109c9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ff90610e31565b60006040518083038185875af1925050503d806000811461053c576040519150601f19603f3d011682016040523d82523d6000602084013e610541565b606091505b5050905080610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c90610e92565b60405180910390fd5b50565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610665576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516106ab90610e31565b60006040518083038185875af1925050503d80600081146106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b5050905080610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610e92565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076b575b5050505050905060005b81518110156108405760008282815181106107dd576107dc610d59565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083890610d88565b9150506107bf565b50600067ffffffffffffffff81111561085c5761085b610dd1565b5b60405190808252806020026020018201604052801561088a5781602001602082028036833780820191505090505b50600190805190602001906108a09291906109c9565b505050565b6000600182815481106108bb576108ba610d59565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f983610929565b90506000670de0b6b3a764000082866109129190610eb2565b61091c9190610f3b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097257600080fd5b505afa158015610986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109aa9190610ff9565b5050509150506402540be400816109c19190611074565b915050919050565b828054828255906000526020600020908101928215610a42579160200282015b82811115610a415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e9565b5b509050610a4f9190610a53565b5090565b5b80821115610a6c576000816000905550600101610a54565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aa082610a75565b9050919050565b610ab081610a95565b8114610abb57600080fd5b50565b600081359050610acd81610aa7565b92915050565b600060208284031215610ae957610ae8610a70565b5b6000610af784828501610abe565b91505092915050565b6000819050919050565b610b1381610b00565b82525050565b6000602082019050610b2e6000830184610b0a565b92915050565b610b3d81610a95565b82525050565b6000602082019050610b586000830184610b34565b92915050565b6000819050919050565b6000610b83610b7e610b7984610a75565b610b5e565b610a75565b9050919050565b6000610b9582610b68565b9050919050565b6000610ba782610b8a565b9050919050565b610bb781610b9c565b82525050565b6000602082019050610bd26000830184610bae565b92915050565b610be181610b00565b8114610bec57600080fd5b50565b600081359050610bfe81610bd8565b92915050565b600060208284031215610c1a57610c19610a70565b5b6000610c2884828501610bef565b91505092915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265207468616e2031302055534420776f7260008201527f7468206f66204574686572000000000000000000000000000000000000000000602082015250565b6000610c9e602b83610c31565b9150610ca982610c42565b604082019050919050565b60006020820190508181036000830152610ccd81610c91565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0e82610b00565b9150610d1983610b00565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4e57610d4d610cd4565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d9382610b00565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc657610dc5610cd4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e1b600083610e00565b9150610e2682610e0b565b600082019050919050565b6000610e3c82610e0e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e7c600b83610c31565b9150610e8782610e46565b602082019050919050565b60006020820190508181036000830152610eab81610e6f565b9050919050565b6000610ebd82610b00565b9150610ec883610b00565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0157610f00610cd4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4682610b00565b9150610f5183610b00565b925082610f6157610f60610f0c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8b81610f6c565b8114610f9657600080fd5b50565b600081519050610fa881610f82565b92915050565b6000819050919050565b610fc181610fae565b8114610fcc57600080fd5b50565b600081519050610fde81610fb8565b92915050565b600081519050610ff381610bd8565b92915050565b600080600080600060a0868803121561101557611014610a70565b5b600061102388828901610f99565b955050602061103488828901610fcf565b945050604061104588828901610fe4565b935050606061105688828901610fe4565b925050608061106788828901610f99565b9150509295509295909350565b600061107f82610fae565b915061108a83610fae565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110c9576110c8610cd4565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561110657611105610cd4565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561114357611142610cd4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111805761117f610cd4565b5b82820290509291505056fea2646970667358221220083ab56f50306ca83a2707cd6b813539bee2ba371c9c9edc57c151e1720e5b4b64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad3565b6102fe565b6040516100cc9190610b19565b60405180910390f35b3480156100e157600080fd5b506100ea610347565b005b3480156100f857600080fd5b50610101610588565b60405161010e9190610b19565b60405180910390f35b34801561012357600080fd5b5061012c61058e565b6040516101399190610b43565b60405180910390f35b34801561014e57600080fd5b506101576105b6565b6040516101649190610bbd565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105e0565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610c04565b6108a5565b6040516101c29190610b43565b60405180910390f35b600054610203600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ed90919063ffffffff16565b11610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023a90610cb4565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f59190610d03565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610478576000600182815481106103f2576103f1610d59565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047090610d88565b9150506103cf565b50600067ffffffffffffffff81111561049457610493610dd1565b5b6040519080825280602002602001820160405280156104c25781602001602082028036833780820191505090505b50600190805190602001906104d89291906109c9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ff90610e31565b60006040518083038185875af1925050503d806000811461053c576040519150601f19603f3d011682016040523d82523d6000602084013e610541565b606091505b5050905080610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c90610e92565b60405180910390fd5b50565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610665576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516106ab90610e31565b60006040518083038185875af1925050503d80600081146106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b5050905080610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610e92565b60405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076b575b5050505050905060005b81518110156108405760008282815181106107dd576107dc610d59565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083890610d88565b9150506107bf565b50600067ffffffffffffffff81111561085c5761085b610dd1565b5b60405190808252806020026020018201604052801561088a5781602001602082028036833780820191505090505b50600190805190602001906108a09291906109c9565b505050565b6000600182815481106108bb576108ba610d59565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f983610929565b90506000670de0b6b3a764000082866109129190610eb2565b61091c9190610f3b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097257600080fd5b505afa158015610986573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109aa9190610ff9565b5050509150506402540be400816109c19190611074565b915050919050565b828054828255906000526020600020908101928215610a42579160200282015b82811115610a415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e9565b5b509050610a4f9190610a53565b5090565b5b80821115610a6c576000816000905550600101610a54565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aa082610a75565b9050919050565b610ab081610a95565b8114610abb57600080fd5b50565b600081359050610acd81610aa7565b92915050565b600060208284031215610ae957610ae8610a70565b5b6000610af784828501610abe565b91505092915050565b6000819050919050565b610b1381610b00565b82525050565b6000602082019050610b2e6000830184610b0a565b92915050565b610b3d81610a95565b82525050565b6000602082019050610b586000830184610b34565b92915050565b6000819050919050565b6000610b83610b7e610b7984610a75565b610b5e565b610a75565b9050919050565b6000610b9582610b68565b9050919050565b6000610ba782610b8a565b9050919050565b610bb781610b9c565b82525050565b6000602082019050610bd26000830184610bae565b92915050565b610be181610b00565b8114610bec57600080fd5b50565b600081359050610bfe81610bd8565b92915050565b600060208284031215610c1a57610c19610a70565b5b6000610c2884828501610bef565b91505092915050565b600082825260208201905092915050565b7f506c656173652073656e64206d6f7265207468616e2031302055534420776f7260008201527f7468206f66204574686572000000000000000000000000000000000000000000602082015250565b6000610c9e602b83610c31565b9150610ca982610c42565b604082019050919050565b60006020820190508181036000830152610ccd81610c91565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0e82610b00565b9150610d1983610b00565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4e57610d4d610cd4565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d9382610b00565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dc657610dc5610cd4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e1b600083610e00565b9150610e2682610e0b565b600082019050919050565b6000610e3c82610e0e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e7c600b83610c31565b9150610e8782610e46565b602082019050919050565b60006020820190508181036000830152610eab81610e6f565b9050919050565b6000610ebd82610b00565b9150610ec883610b00565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0157610f00610cd4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4682610b00565b9150610f5183610b00565b925082610f6157610f60610f0c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f8b81610f6c565b8114610f9657600080fd5b50565b600081519050610fa881610f82565b92915050565b6000819050919050565b610fc181610fae565b8114610fcc57600080fd5b50565b600081519050610fde81610fb8565b92915050565b600081519050610ff381610bd8565b92915050565b600080600080600060a0868803121561101557611014610a70565b5b600061102388828901610f99565b955050602061103488828901610fcf565b945050604061104588828901610fe4565b935050606061105688828901610fe4565b925050608061106788828901610f99565b9150509295509295909350565b600061107f82610fae565b915061108a83610fae565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110c9576110c8610cd4565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561110657611105610cd4565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561114357611142610cd4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111805761117f610cd4565b5b82820290509291505056fea2646970667358221220083ab56f50306ca83a2707cd6b813539bee2ba371c9c9edc57c151e1720e5b4b64736f6c63430008080033",
  "devdoc": {
    "author": "soliditee",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}